package neatflappy

import (
	"bytes"
	"encoding/json"
	"io"
	"log"
	"testing"
)

func Test_DecodeTraces(t *testing.T) {
	buf := bytes.NewBufferString(sampleData)
	decoder := json.NewDecoder(buf)
	i := 0
	for {
		data := Trace{}
		if err := decoder.Decode(&data); err != nil && err != io.EOF {
			t.Errorf("error decoding line %d: %s", i, err.Error())
			break
		} else if err == io.EOF {
			break
		}
		i++
		log.Println(data)
	}
}

var sampleData = `{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,1],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,1],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,1],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,1],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,107,2],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,2],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,2],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,113,2],"Out":false}
{"In":[0,0,0,7,0,0,0,0,0,0,0,2,0,0,284,3],"Out":false}
{"In":[0,0,0,7,0,0,0,0,0,0,0,2,0,0,288,3],"Out":false}
{"In":[0,0,0,7,0,0,0,0,0,0,0,2,0,0,292,4],"Out":false}
{"In":[0,0,0,7,0,0,0,0,0,0,0,2,0,0,296,4],"Out":true}
{"In":[0,0,0,7,0,0,0,0,0,0,0,2,0,0,290,-5],"Out":false}
{"In":[0,0,0,7,0,0,0,0,0,0,0,2,0,0,284,-5],"Out":false}
{"In":[0,0,0,7,0,0,0,0,0,0,0,2,0,0,278,-5],"Out":false}
{"In":[0,0,0,7,0,0,0,0,0,0,0,2,0,0,273,-5],"Out":false}
{"In":[0,0,0,7,0,0,0,0,0,0,0,2,0,0,268,-4],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,193,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,199,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,211,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,217,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,235,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,241,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,247,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,259,6],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,265,6],"Out":true}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,259,-5],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,-5],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,247,-5],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,242,-5],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,237,-4],"Out":false}
{"In":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,-4],"Out":false}`
